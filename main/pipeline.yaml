apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: testsuite-pipeline
spec:
  params:
    - default: 'quay.io/kuadrant/testsuite:unstable'
      description: Testsuite image to run tests on
      name: testsuite-image
      type: string
    - description: API URL of the Openshift cluster
      name: kube-api
      type: string
    - default: kuadrant
      description: Name of the Openshift project
      name: project
      type: string
    - default: kuadrant
      description: Makefile target for tests
      name: make-target
      type: string
    - default: ""
      description: Pytest flags to use with Make (flags="${pytest-flags}" make kuadrant)
      name: pytest-flags
      type: string
    - default: pipeline-settings
      description: Config Map with settings for the testsuite
      name: settings-cm
      type: string
    - default: ""
      description: Additional env for testsuite container separated with spaces (e.g. KUADRANT_CONTROL_PLANE__provider_secret=gcp-credentials KUADRANT_KEYCLOAK__url="https://my-sso.net")
      name: additional-env
      type: string
    - default: pipeline
      description: Prefix of the launch name saved in report portal (nightly, username, manual, etc.)
      name: launch-name
      type: string
    - default: testsuite
      description: Report Portal Project to store test results (e.g. testsuite, nightly-testsuite)
      name: rp-project
      type: string
    - default: true
      description: Upload test results to Report Portal
      name: upload-results
      type: string
  tasks:
    - name: kubectl-login
      params:
        - name: testsuite-image
          value: $(params.testsuite-image)
        - name: kube-api
          value: $(params.kube-api)
      taskRef:
        kind: Task
        name: kubectl-login
      workspaces:
        - name: shared-workspace
    - name: run-tests
      params:
        - name: testsuite-image
          value: $(params.testsuite-image)
        - name: project
          value: $(params.project)
        - name: make-target
          value: $(params.make-target)
        - name: pytest-flags
          value: $(params.pytest-flags)
        - name: settings-cm
          value: $(params.settings-cm)
        - name: additional-env
          value: $(params.additional-env)
        - name: kubeconfig-path
          value: $(tasks.kubectl-login.results.kubeconfig-path)
      runAfter:
        - kubectl-login
      taskRef:
        kind: Task
        name: run-tests
      workspaces:
        - name: shared-workspace
  finally:
    # - name: upload-results
    #   when:
    #     - input: $(params.upload-results)
    #       operator: in
    #       values: ["true"]
    #   params:
    #     - name: launch-name
    #       value: $(params.launch-name)
    #     - name: testsuite-image
    #       value: $(params.testsuite-image)
    #     - name: make-target
    #       value: $(params.make-target)
    #     - name: rp-project
    #       value: $(params.rp-project)
    #   taskRef:
    #     kind: Task
    #     name: upload-results
    #   workspaces:
    #     - name: shared-workspace
  workspaces:
    - name: shared-workspace
